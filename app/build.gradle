apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven {url 'https://maven.fabric.io/public'}
    maven {url "https://s3.amazonaws.com/repo.commonsware.com"}
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.1'
    
    defaultConfig {
        applicationId 'de.uni_marburg.mathematik.ds.serval'
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 22
        versionName '0.4.11'
        setProperty('archivesBaseName', "$applicationId-$versionName")
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    
    signingConfigs {
        release {
            storeFile = file(keystoreProperties['storeFile'])
            storePassword = keystoreProperties['storePassword']
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
        }
    }
    
    buildTypes {
        debug {
            manifestPlaceholders = [
                    KEY_FABRIC     : keystoreProperties['key_fabric'],
                    KEY_GOOGLE_MAPS: keystoreProperties['key_google_maps'],
                    APP_ICON       : '@mipmap/ic_launcher_dev',
                    APP_ICON_ROUND : '@mipmap/ic_launcher_round_dev'
            
            ]
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [
                    KEY_FABRIC     : keystoreProperties['key_fabric'],
                    KEY_GOOGLE_MAPS: keystoreProperties['key_google_maps'],
                    APP_ICON       : '@mipmap/ic_launcher',
                    APP_ICON_ROUND : '@mipmap/ic_launcher_round'
            ]
        }
    }
}

dependencies {
    
    ext {
        butterknife_version = '8.8.1'
        google_play_services_version = '11.2.2'
        leak_canary_version = '1.5.1'
        material_dialogs_version = '0.9.4.7'
        support_library_version = '26.0.2'
    }
    
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile(
            'com.android.support.test.espresso:espresso-core:2.2.2',
            {exclude group: 'com.android.support', module: 'support-annotations'}
    )
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife_version}"
    compile "com.android.support:appcompat-v7:${support_library_version}"
    compile "com.android.support:cardview-v7:${support_library_version}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:design:${support_library_version}"
    compile "com.android.support:preference-v7:${support_library_version}"
    compile "com.android.support:preference-v14:${support_library_version}"
    compile "com.android.support:support-v4:${support_library_version}"
    compile "com.android.support:support-vector-drawable:${support_library_version}"
    compile "com.android.support:recyclerview-v7:${support_library_version}"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {transitive = true;}
    compile "com.google.android.gms:play-services-location:${google_play_services_version}"
    compile "com.google.android.gms:play-services-maps:${google_play_services_version}"
    compile "com.google.firebase:firebase-core:${google_play_services_version}"
    compile 'com.google.maps.android:android-maps-utils:0.5'
    compile "com.jakewharton:butterknife:${butterknife_version}"
    compile 'com.squareup.moshi:moshi:1.5.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'ru.noties:markwon:1.0.0'
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leak_canary_version}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leak_canary_version}"
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
