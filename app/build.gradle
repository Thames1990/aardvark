plugins {
    id 'com.gladed.androidgitversion' version '0.4.3'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    androidGitVersion {
        prefix 'v'
    }

    defaultConfig {
        applicationId 'de.uni_marburg.mathematik.ds.serval'
        minSdkVersion 21
        targetSdkVersion 27
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        setProperty('archivesBaseName', "aardvark-$versionName")
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        try {
            manifestPlaceholders = [KEY_FABRIC: KEY_FABRIC, KEY_GOOGLE_MAPS: KEY_GOOGLE_MAPS]
        } catch (ignored) {
            throw new InvalidUserDataException(
                    "You should define Fabric and Google Maps keys in gradle.properties."
            )
        }
    }

    signingConfigs {
        release {
            try {
                storeFile = file(STORE_FILE)
                storePassword = STORE_PASSWORD
                keyAlias = KEY_ALIAS
                keyPassword = KEY_PASSWORD
            } catch (ignored) {
                throw new InvalidUserDataException(
                        "You should define release signing secrets in gradle.properties."
                )
            }
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }
}

dependencies {

    // Android Maps Utils
    implementation "com.google.maps.android:android-maps-utils:$android_maps_utils_version"

    // Architecture Components
    implementation "android.arch.lifecycle:extensions:$architecture_components_version"
    kapt "android.arch.lifecycle:compiler:$architecture_components_version"
    implementation "android.arch.persistence.room:runtime:$architecture_components_version"
    kapt "android.arch.persistence.room:compiler:$architecture_components_version"
    implementation "android.arch.paging:runtime:$paging_version"

    // Crashlytics
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"

    // Firebase
    implementation "com.google.firebase:firebase-core:$google_play_services_version"

    // Google Play Services
    implementation "com.google.android.gms:play-services-location:$google_play_services_version"
    implementation "com.google.android.gms:play-services-maps:$google_play_services_version"

    // Ionicons
    implementation "com.mikepenz:community-material-typeface:$community_material_typeface_version"
    implementation "com.mikepenz:weather-icons-typeface:$weather_icons_typeface_version"

    // KAU
    implementation "ca.allanwang.kau:about:$kau_version"
    implementation "ca.allanwang.kau:kpref-activity:$kau_version"

    // Kerval
    implementation files("libs/kerval-${kerval_version}.jar")

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Reprint
    implementation "com.github.ajalt.reprint:core:$reprint_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}

apply plugin: 'com.google.gms.google-services'
