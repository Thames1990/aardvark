apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.gladed.androidgitversion'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    androidGitVersion {
        prefix 'v'
    }

    def properties = file("../gradle.properties")
    def hasProperties = properties.exists()
    if (!hasProperties) throw new InvalidUserDataException("Gradle property file is not configured")

    defaultConfig {
        applicationId 'de.uni_marburg.mathematik.ds.serval'
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()

        setProperty('archivesBaseName', "aardvark-$versionName")
        multiDexEnabled true

        buildConfigField "String", "KERVAL_VERSION", "\"$versions.kerval\""
        buildConfigField "String", "SERVAL_USER", SERVAL_USER
        buildConfigField "String", "SERVAL_PASSWORD", SERVAL_PASSWORD
        buildConfigField "String", "SERVAL_BASE_URL", SERVAL_BASE_URL
        buildConfigField "Integer", "SERVAL_PORT", SERVAL_PORT

        manifestPlaceholders = [KEY_FABRIC: KEY_FABRIC, KEY_GOOGLE_MAPS: KEY_GOOGLE_MAPS]
    }

    signingConfigs {
        release {
            storeFile = file(STORE_FILE)
            storePassword = STORE_PASSWORD
            keyAlias = KEY_ALIAS
            keyPassword = KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // App Toolkit
    implementation(deps.crashlytics) { transitive = true }
    implementation deps.google_maps_clustering
    implementation(deps.moshi) { exclude group: 'com.squareup.okio', module: 'okio' }
    implementation deps.reprint
    // Architecture Components
    implementation deps.lifecycle.extensions
    implementation deps.room.runtime
    kapt deps.lifecycle.compiler
    kapt deps.room.compiler
    // Firebase
    implementation deps.firebase.core
    implementation deps.firebase.perf
    // Google Play Services
    implementation deps.google_play_services.location
    implementation deps.google_play_services.maps
    // Ioconics
    implementation deps.ioconics.community_material_typeface
    implementation deps.ioconics.weather_icons_typeface
    // Kau
    implementation deps.kau.kau_about
    implementation deps.kau.kpref_activity
    // Kotlin
    implementation deps.kotlin.stdlib
    // Support Library
    implementation deps.support_library.appcompat
    implementation deps.support_library.cardview
    implementation deps.support_library.constraintLayout
    implementation deps.support_library.design
    implementation deps.support_library.recyclerview
    implementation deps.support_library.support
    implementation deps.support_library.support_annotations
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}
