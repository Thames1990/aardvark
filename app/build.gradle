apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    def keystore = rootProject.file("keystore.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(keystore))

    defaultConfig {
        applicationId 'de.uni_marburg.mathematik.ds.serval'
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 26
        versionName '0.6.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        resValue "string", "app_version", "$versionName"
        setProperty('archivesBaseName', "aardvark-$versionName")

        androidExtensions { experimental = true }
        dataBinding { enabled = true }
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [
                KEY_FABRIC     : properties['key_fabric'],
                KEY_GOOGLE_MAPS: properties['key_google_maps']
        ]
    }

    signingConfigs {
        release {
            storeFile = file(properties['storeFile'])
            storePassword = properties['storePassword']
            keyAlias = properties['keyAlias']
            keyPassword = properties['keyPassword']
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            manifestPlaceholders = [
                    APP_ICON      : '@mipmap/ic_launcher_dev',
                    APP_ICON_ROUND: '@mipmap/ic_launcher_round_dev'
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [
                    APP_ICON      : '@mipmap/ic_launcher',
                    APP_ICON_ROUND: '@mipmap/ic_launcher_round'
            ]
        }
    }
}

dependencies {
    annotationProcessor "android.arch.lifecycle:compiler:$architecture_components_version"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "agency.tango.android:material-intro-screen:$material_intro_screen_version"
    implementation "android.arch.lifecycle:extensions:$architecture_components_version"
    implementation "ca.allanwang.kau:about:$kau_version"
    implementation "ca.allanwang.kau:kpref-activity:$kau_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:design:$support_library_version"
    implementation "com.android.support:recyclerview-v7:$support_library_version"
    implementation "com.android.support:support-v4:$support_library_version"
    implementation "com.android.support:support-vector-drawable:$support_library_version"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlytics_version") {
        transitive = true
    }
    implementation "com.google.android.gms:play-services-location:$google_play_services_version"
    implementation "com.google.android.gms:play-services-maps:$google_play_services_version"
    implementation "com.google.firebase:firebase-core:$google_play_services_version"
    implementation "com.google.maps.android:android-maps-utils:$android_maps_utils_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "ru.noties:markwon:$markwon_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: 'com.google.gms.google-services'
