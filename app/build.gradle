apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            def propsFile = rootProject.file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties();
                props.load(new FileInputStream(propsFile))
                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            } else if (
            System.getenv("SERVAL_KEYSTORE_STORE_FILE") != null &&
                    System.getenv("SERVAL_KEYSTORE_STORE_PASSWORD") != null &&
                    System.getenv("SERVAL_KEYSTORE_KEY_ALIAS") != null &&
                    System.getenv("SERVAL_KEYSTORE_KEY_PASSWORD") != null
            ) {
                storeFile = System.getenv("SERVAL_KEYSTORE_STORE_FILE")
                storePassword = System.getenv("SERVAL_KEYSTORE_STORE_PASSWORD")
                keyAlias = System.getenv("SERVAL_KEYSTORE_KEY_ALIAS")
                keyPassword = System.getenv("SERVAL_KEYSTORE_KEY_PASSWORD")
            }
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "de.uni_marburg.mathematik.ds.serval"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 3
        versionName "0.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        jackOptions {
            enabled true
        }
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
        def propsFile = rootProject.file('keys.properties')
        def String googleMapsKeys
        if (propsFile.exists()) {
            def props = new Properties();
            props.load(new FileInputStream(propsFile))
            googleMapsKeys = props['googleMapsKey']
            variant.resValue "string", "google_maps_key", googleMapsKeys
        } else if (System.getenv("SERVAL_MAPS_KEY") != null) {
            variant.resValue "string", "google_maps_key", System.getenv("SERVAL_MAPS_KEY")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (rootProject.file("keystore.properties").exists() ||
                    (System.getenv("SERVAL_KEYSTORE_STORE_FILE") != null &&
                            System.getenv("SERVAL_KEYSTORE_STORE_PASSWORD") != null &&
                            System.getenv("SERVAL_KEYSTORE_KEY_ALIAS") != null &&
                            System.getenv("SERVAL_KEYSTORE_KEY_PASSWORD") != null)
            ) {
                signingConfig signingConfigs.release
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    ext {
        butterknife_version = '8.8.1'
        glide_version = '4.0.0'
        google_play_services_version = '11.2.0'
        support_library_version = '26.0.1'
    }
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Support libraries
    compile "com.android.support:appcompat-v7:${support_library_version}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:cardview-v7:${support_library_version}"
    compile "com.android.support:design:${support_library_version}"
    compile "com.android.support:support-v4:${support_library_version}"
    compile "com.android.support:support-vector-drawable:${support_library_version}"
    compile "com.android.support:recyclerview-v7:${support_library_version}"
    // Google Play Services
    compile "com.google.android.gms:play-services-location:${google_play_services_version}"
    compile "com.google.android.gms:play-services-maps:${google_play_services_version}"
    // Butter Knife
    compile "com.jakewharton:butterknife:${butterknife_version}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife_version}"
    // Gson
    compile 'com.google.code.gson:gson:2.8.1'
    // OkHttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    // Glide
    compile "com.github.bumptech.glide:glide:${glide_version}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide_version}"
    // AboutLibraries
    compile('com.mikepenz:aboutlibraries:5.9.7@aar') {
        transitive = true
    }
    testCompile 'junit:junit:4.12'
}
